import os  
import zipfile  
  
def get_all_files_with_path(folder_path):  
    """  
    Get all files with their full paths in the specified folder.  
  
    :param folder_path: The path to the folder you want to search.  
    :return: A list of tuples containing the full path and filename for each file.  
    """  
    all_files = []  
  
    # Walk through the directory and its subdirectories  
    for root, dirs, files in os.walk(folder_path):  
        for file in files:  
            # Construct the full path for each file  
            full_path = os.path.join(root, file)  
            all_files.append((full_path, file))  
  
    return all_files  
  
def unzip_file(zip_path, extract_to):  
    """  
    Unzip a ZIP file to the specified directory.  
  
    :param zip_path: The full path to the ZIP file.  
    :param extract_to: The directory where the ZIP file should be extracted.  
    """  
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:  
        zip_ref.extractall(extract_to)  
    print(f"ZIP file {zip_path} has been extracted to {extract_to}")  
  
# Example usage:  
folder_to_search = '/path/to/your/folder'  # Replace with the actual folder path  
zip_file_path = '/path/to/your/zipfile.zip'  # Replace with the actual ZIP file path  
extract_to_path = '/path/to/extract'  # Replace with the path where you want to extract the ZIP file  
  
# Get all files with full paths  
files_with_paths = get_all_files_with_path(folder_to_search)  
  
# Print the full paths and filenames  
for full_path, filename in files_with_paths:  
    print(f"Full Path: {full_path}")  
    print(f"Filename: {filename}")  
    print("-" * 40)  # Separate the output with a line  
  
# Unzip the ZIP file  
unzip_file(zip_file_path, extract_to_path)






transaction AHOC associates program ATMN249, ATMN249 calls ATMN145, ATMN145 calls ATMX002 and starts transaction ADTD, ATMX002 starts transaction XDTD. Can u give a transcation call path from AHOC?


ATMN92 calls ATMN30 and ATMN41, ATMN30 calls ATMN43, ATMN91 AND starts transaction ADTD. Program ATMN43 calls ATMN145. call u give a program call path from ATMN92 to ATMN145?

Based on the information provided, the transaction call path from AHOC can be traced as follows:

Transaction AHOC associates with program ATMN249.
Program ATMN249 calls program ATMN145.
Program ATMN145 starts transaction ADTD.
Program ATMN145 calls program ATMX002.
Program ATMX002 starts transaction XDTD.
Therefore, the transaction call path from AHOC is:

AHOC → ATMN249 → ATMN145 → ADTD → ATMX002 → XDTD

This path represents the sequence of transactions and programs that are called or started from the initial transaction AHOC.


def extract_lines_with_string(file_path, target_string):  
    with open(file_path, 'r') as file:  
        lines = file.readlines()  
  
    extracted_lines = [line for line in lines if target_string in line]  
    return extracted_lines  
  
# Example usage  
file_path = 'example.txt'  
target_string = 'particular'  
  
extracted_lines = extract_lines_with_string(file_path, target_string)  
for line in extracted_lines:  
    print(line.strip())




################
# 文件路径列表  
file_paths = ['file1.txt', 'file2.txt', 'file3.txt']  
  
# 遍历文件路径列表  
for file_path in file_paths:  
    # 打开文件  
    with open(file_path, 'r') as file:  
        # 读取文件的每一行  
        for line in file:  
            # 打印每一行  
            print(line.strip())  # strip() 方法用于去除字符串头尾指定的字符（默认为空格或换行符）或字符序列。
